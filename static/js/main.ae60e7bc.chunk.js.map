{"version":3,"sources":["img/logo.png","img sync /^/.//.*/.png$","img/1.png","img/2.png","img/3.png","img/4.png","img/5.png","img/6.png","components/Card.js","components/Scoreboard.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Card","index","value","isRotated","onClick","className","src","require","default","alt","Scoreboard","score","movesLeft","handleBtnClick","message","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","App","state","noOfMovesPlayed","randomArray","currentMove","cardsOpen","Array","fill","timeout","gameOver","setState","resetMove","newCardsOpen","forEach","move","onClickHandle","ind","a","clearTimeout","every","el","setTimeout","renderCardList","num","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae60e7bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6929fe5e.png\";","var map = {\n\t\"./1.png\": 20,\n\t\"./2.png\": 21,\n\t\"./3.png\": 22,\n\t\"./4.png\": 23,\n\t\"./5.png\": 24,\n\t\"./6.png\": 25,\n\t\"./logo.png\": 5\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 19;","export default __webpack_public_path__ + \"static/media/1.302a1e84.png\";","export default __webpack_public_path__ + \"static/media/2.55212b82.png\";","export default __webpack_public_path__ + \"static/media/3.fa511a18.png\";","export default __webpack_public_path__ + \"static/media/4.9cbfdd7a.png\";","export default __webpack_public_path__ + \"static/media/5.b035f7b1.png\";","export default __webpack_public_path__ + \"static/media/6.8b36e1f8.png\";","import React from 'react';\nimport './Card.css';\n\nexport default function Card({ index, value, isRotated, onClick }) {\n  const onCardClick = () => {\n    onClick(index);\n  };\n\n  return (\n    <div onClick={onCardClick} className={`card ${isRotated ? 'rotated' : ''}`}>\n      <div className=\"card__side card__side--front\">\n        <img src={require('../img/logo.png').default} alt=\"Logo\" />\n      </div>\n      <div className=\"card__side card__side--back\">\n        <img\n          src={require(`../img/${value}.png`).default}\n          alt={'Image ' + value}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Scoreboard.css';\n\nexport default function Scoreboard({ score, movesLeft, handleBtnClick }) {\n  let message = 'REACT MEMORY GAME';\n  if (!movesLeft) message = 'Awwww, you failed 😢️';\n  if (score === 6) message = 'Grejt skses! 👏️👏️👏️';\n\n  return (\n    <div className=\"scoreboard\">\n      <div className=\"moves\">\n        <h3>\n          Moves\n          <span>{movesLeft}</span>\n        </h3>\n      </div>\n      <div className=\"message\">\n        <h2>{message}</h2>\n        {message !== 'REACT MEMORY GAME' ? (\n          <button onClick={handleBtnClick} className=\"btn\">\n            TRY AGAIN\n          </button>\n        ) : null}\n      </div>\n      <div className=\"score\">\n        <h3>\n          Score\n          <span>{score}</span>\n        </h3>\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\n\nimport Card from './components/Card';\nimport Scoreboard from './components/Scoreboard';\nimport './App.css';\n\nfunction shuffle(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default class App extends Component {\n  state = {\n    movesLeft: 5,\n    score: 0,\n    noOfMovesPlayed: 0,\n    randomArray: shuffle([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6]),\n    currentMove: [],\n    cardsOpen: Array(12).fill(false),\n    timeout: null,\n    gameOver: false,\n  };\n\n  handleBtnClick = () => {\n    this.setState({\n      movesLeft: 5,\n      score: 0,\n      noOfMovesPlayed: 0,\n      randomArray: shuffle([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6]),\n      currentMove: [],\n      cardsOpen: Array(12).fill(false),\n      timeout: null,\n      gameOver: false,\n    });\n  };\n\n  resetMove = () => {\n    const newCardsOpen = [...this.state.cardsOpen];\n    this.state.currentMove.forEach((move) => {\n      newCardsOpen[move] = false;\n    });\n    this.setState({\n      cardsOpen: newCardsOpen,\n      currentMove: [],\n      timeout: null,\n    });\n  };\n\n  // Async zbog toga što treba da sačeka jedan setState\n  onClickHandle = async (ind) => {\n    // Ako je karta već otvorena ili je igra završena, iskuliraj klik\n    if (this.state.cardsOpen[ind] || this.state.gameOver) {\n      return;\n    }\n\n    const newCardsOpen = [...this.state.cardsOpen];\n    newCardsOpen[ind] = !this.state.cardsOpen[ind];\n\n    await this.setState({\n      noOfMovesPlayed: this.state.noOfMovesPlayed + 1,\n      cardsOpen: newCardsOpen,\n    });\n\n    // Ako je prvi potez, poništi prethodne\n    // (u slučaju da je treći potez kliknut prije isteka timeouta)\n    if (this.state.noOfMovesPlayed === 1) {\n      if (this.state.timeout) {\n        clearTimeout(this.state.timeout);\n        this.resetMove();\n      }\n    }\n\n    // Evidentiraj trenutni potez radi poređenja\n    this.setState({ currentMove: [...this.state.currentMove, ind] });\n\n    if (this.state.noOfMovesPlayed === 2) {\n      this.setState({ noOfMovesPlayed: 0 });\n      if (\n        this.state.randomArray[ind] ===\n        this.state.randomArray[this.state.currentMove[0]]\n      ) {\n        this.setState({\n          score: this.state.score + 1,\n          currentMove: [],\n        });\n        if (this.state.cardsOpen.every((el) => el)) {\n          this.setState({ gameOver: true });\n        }\n      } else {\n        this.setState({\n          timeout: setTimeout(this.resetMove, 2000),\n          movesLeft: this.state.movesLeft - 1,\n        });\n\n        if (!this.state.movesLeft) {\n          this.setState({ gameOver: true });\n        }\n      }\n    }\n  };\n\n  renderCardList = () => {\n    return this.state.randomArray.map((num, ind) => {\n      return (\n        <Card\n          key={ind}\n          index={ind}\n          value={num}\n          isRotated={this.state.cardsOpen[ind]}\n          state={this.state}\n          onClick={this.onClickHandle}\n        />\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Scoreboard\n          score={this.state.score}\n          movesLeft={this.state.movesLeft}\n          handleBtnClick={this.handleBtnClick}\n        />\n        {this.renderCardList()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}